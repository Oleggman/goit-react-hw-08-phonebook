{"version":3,"file":"static/js/79.b6a8eb8b.chunk.js","mappings":"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","sources":["components/ContactsForm/ContactsForm.styled.js","components/App.styled.js","components/Contact/Contact.styled.js","components/Contact/Contact.jsx","components/ContactsBook/ContactsBook.styled.js","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","components/ContactsBook/ContactsBook.jsx","components/ContactsForm/ContactsForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Contacts.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Form, Field, ErrorMessage } from \"formik\";\n\nexport const FormTitle = styled.h2`\n  margin: 0 0 30px;\n  padding: 0;\n  color: #fff;\n  text-align: center;\n`;\n\nexport const StyledForm = styled(Form)`\n  display: flex;\n  max-width: 360px;\n  width: 100%;\n  height: fit-content;\n  flex-direction: column;\n  padding: 40px;\n  background: rgba(0,0,0,.5);\n  box-sizing: border-box;\n  box-shadow: 0 15px 25px rgba(0,0,0,.6);\n  border-radius: 10px;\n  margin: 0 auto;\n`;\n\nexport const InputBox = styled.label`\n  position: relative;\n`\n\nexport const InputLabel = styled.span`\n  position: absolute;\n  top: -20px;\n  left: 0;\n  color: #03e9f4;\n  font-size: 12px;\n  padding: 10px 0;\n  pointer-events: none;\n`;\n\nexport const StyledField = styled(Field)`\n  width: 100%;\n  padding: 10px 0;\n  line-height: 1.3;\n  font-size: 16px;\n  color: #fff;\n  margin-bottom: 30px;\n  border: none;\n  border-bottom: 1px solid #fff;\n  outline: none;\n  background: transparent;\n`;\n\nexport const SubmitBtn = styled.button`\n  position: relative;\n  display: inline-block;\n  padding: 10px 20px;\n  color: #03e9f4;\n  font-size: 16px;\n  text-decoration: none;\n  text-transform: uppercase;\n  overflow: hidden;\n  transition: .5s;\n  margin-top: 40px;\n  letter-spacing: 4px;\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  outline: none;\n\n  &:hover {\n    background: #03e9f4;\n    color: #fff;\n    border-radius: 5px;\n    box-shadow: 0 0 5px #03e9f4,\n                0 0 25px #03e9f4,\n                0 0 50px #03e9f4,\n                0 0 100px #03e9f4;\n  }\n`;\n\nexport const Error = styled(ErrorMessage)`\n  width: fit-content;\n  text-align: center;\n  padding: 4px 8px;\n  color: #cc0033;\n  font-family: Helvetica, Arial, sans-serif;\n  font-size: 13px;\n  font-weight: bold;\n  line-height: 20px;\n  position: absolute;\n  right: 0;\n  bottom: -5%;\n`;","import styled from \"styled-components\";\n\nexport const MainContainer = styled.div`\n  display: flex;\n  padding: 20px;\n  justify-content: space-around;\n`;\n\nexport const ContactsList = styled.div`\n  width: 50vw;\n`;\n\nexport const ContactsTitle = styled.h2`\n  text-align: center;\n  margin-bottom: 16px;\n  color: white;\n  padding: 10px;\n  font-size: 40px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n`;","import styled from \"styled-components\";\n\nexport const ContactItem = styled.li`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n  width: fit-content;\n  background: rgba(0,0,0,.5);\n  color: #fff;\n  font-size: 18px;\n  letter-spacing: 2px;\n  border-radius: 2px;\n  padding: 12px 20px;\n  box-shadow: rgba(0, 0, 0, 0.93) -6px 8px 10px -3px;\n`;\n\nexport const DeleteBtn = styled.button`\n  cursor: pointer;\n   display: inline-block;\n  padding: 4px 8px;\n  color: #03e9f4;\n  font-size: 16px;\n  text-decoration: none;\n  text-transform: uppercase;\n  overflow: hidden;\n  transition: .5s;\n  letter-spacing: 4px;\n  cursor: pointer;\n  background-color: transparent;\n  border: none;\n  outline: none;\n\n  &:hover {\n    background: #03e9f4;\n    color: #fff;\n    border-radius: 5px;\n    box-shadow: 0 0 5px #03e9f4,\n                0 0 25px #03e9f4,\n                0 0 50px #03e9f4,\n                0 0 100px #03e9f4;\n  }\n`;","import { useDispatch } from \"react-redux\";\nimport { ContactItem, DeleteBtn } from \"./Contact.styled\";\nimport { deleteContact } from \"redux/contacts/operations\";\n\nexport const Contact = ({ contact: { id, name, number }}) => {\n  const dispatch = useDispatch();\n  \n  return (\n    <ContactItem>\n      <p>{name}: {number}</p>\n      <DeleteBtn type=\"button\" onClick={() => dispatch(deleteContact(id))}>Delete</DeleteBtn>\n    </ContactItem>\n  );\n}","import styled from \"styled-components\";\n\nexport const ContactsUL = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-direction: column;\n  gap: 20px; \n  /* columns: 200px;  \n    column-gap: 10px;  \n    column-rule: 4px dotted turquoise;  */\n\n`;","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter.value;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter], (contacts, filter) => {\n    filter = filter.toLowerCase();\n    \n    return contacts.filter(contact => {\n      return contact.name.toLowerCase().includes(filter);\n    });\n  }\n)","import { useSelector } from \"react-redux\";\nimport { Contact } from \"components/Contact/Contact\";\nimport { ContactsUL } from \"./ContactsBook.styled\";\nimport { selectVisibleContacts } from \"redux/contacts/selectors\";\n\nexport const ContactsBook = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  \n  return (\n    <div>\n      <ContactsUL>\n        {visibleContacts.map(contact =>\n          <Contact key={contact.id} contact={contact} />)}\n      </ContactsUL>\n    </div>\n  );\n}","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Notiflix from 'notiflix';\nimport { FormTitle, StyledForm, InputBox, InputLabel, StyledField, SubmitBtn, Error } from './ContactsForm.styled';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst ContactSchema = Yup.object().shape({\n  name: Yup.string()\n      .trim()\n      .matches(\n        /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n        'Invalid name format.'\n        )\n      .min(3, 'Too short contact name!')\n      .max(20, 'Too long contact name!')\n      .required('Required'),\n  number: Yup.string()\n      .trim()\n      .matches(\n        /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n        'Invalid phone number format'\n      )\n      .min(3, 'Too short phone number!')\n      .max(20, 'Too long phone number!')\n      .required('Required'),\n });\n\nexport const ContactsForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const onSubmitForm = (values, helpers) => {\n    if (contacts.some(contact => contact.name === values.name)) {\n      Notiflix.Notify.failure('This person already exists');\n      helpers.resetForm();\n      return;\n    }\n\n    dispatch(addContact(values));\n    helpers.resetForm();\n  }\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={ContactSchema}\n      onSubmit={onSubmitForm}\n    >\n      <StyledForm>\n        <FormTitle>Add contact</FormTitle>\n        <InputBox>\n          <StyledField name=\"name\" autoComplete=\"off\" />\n          <InputLabel>Name</InputLabel>\n          <Error component='p' name=\"name\" />\n        </InputBox>\n        <InputBox>\n          <StyledField type=\"tel\" name=\"number\" autoComplete=\"off\" />\n          <InputLabel>Phone</InputLabel>\n          <Error component='p' name=\"number\" />\n        </InputBox>\n        <SubmitBtn type=\"submit\">Add contact</SubmitBtn>\n      </StyledForm>\n    </Formik>\n  )\n}\n","import styled from \"styled-components\";\n\nexport const FilterBox = styled.div`\n  width: fit-content;\n  margin: 0 auto 20px;\n`;\n\nexport const InputFilter = styled.input`\n  background: rgb(0, 0, 0, 0.4);\n  border: none;\n  border-radius: 4px;\n  outline: none;\n  margin-right: 10px;\n  padding: 12px;\n  font-size: 16px;\n  display: block;\n  margin: 0 auto;\n  color: #fff\n`;\n\nexport const FilterTitle = styled.p`\n  color: white;\n  padding: 10px;\n  font-size: 24px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n`;","import { useDispatch, useSelector } from \"react-redux\";\nimport { InputFilter, FilterTitle, FilterBox } from \"./Filter.styled\";\nimport { selectFilter } from \"redux/contacts/selectors\";\nimport { changeFilter } from \"redux/contacts/filterSlice\";\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  return (\n    <FilterBox>\n      <FilterTitle>Find contact by name</FilterTitle>\n      <InputFilter\n        placeholder=\"Filter...\"\n        type=\"text\"\n        value={filter}\n        onChange={e => dispatch(changeFilter(e.target.value))} />\n    </FilterBox>\n  );\n}","import { ContactsList, ContactsTitle, MainContainer } from \"components/App.styled\";\nimport { ContactsBook } from \"components/ContactsBook/ContactsBook\";\nimport { ContactsForm } from \"components/ContactsForm/ContactsForm\";\nimport { Filter } from \"components/Filter/Filter\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { fetchContacts } from \"redux/contacts/operations\";\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  \n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  \n\n  return (\n    <div>\n        <MainContainer>\n          <ContactsList>\n            <ContactsTitle>Contacts</ContactsTitle>\n            <Filter />\n            <ContactsBook />\n          </ContactsList>\n        \n          <ContactsForm />\n        </MainContainer>\n      </div>\n  )\n}"],"names":["FormTitle","styled","_templateObject","_taggedTemplateLiteral","StyledForm","Form","_templateObject2","InputBox","_templateObject3","InputLabel","_templateObject4","StyledField","Field","_templateObject5","SubmitBtn","_templateObject6","Error","ErrorMessage","_templateObject7","MainContainer","ContactsList","ContactsTitle","ContactItem","DeleteBtn","Contact","_ref","_ref$contact","contact","id","name","number","dispatch","useDispatch","_jsxs","children","_jsx","type","onClick","deleteContact","ContactsUL","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","join","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","items","selectFilter","filter","selectVisibleContacts","toLowerCase","includes","ContactsBook","visibleContacts","useSelector","ContactSchema","Yup","shape","trim","matches","min","max","required","ContactsForm","Formik","initialValues","validationSchema","onSubmit","values","helpers","some","Notiflix","resetForm","addContact","autoComplete","component","FilterBox","InputFilter","FilterTitle","Filter","placeholder","onChange","e","changeFilter","target","Contacts","useEffect","fetchContacts"],"sourceRoot":""}